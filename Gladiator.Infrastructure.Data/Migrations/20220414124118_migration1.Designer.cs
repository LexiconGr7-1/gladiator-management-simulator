// <auto-generated />
using System;
using Gladiator.Infrastructure.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gladiator.Infrastructure.Data.Migrations
{
    [DbContext(typeof(GladiatorContext))]
    [Migration("20220414124118_migration1")]
    partial class migration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ArenaPlayer", b =>
                {
                    b.Property<long>("ArenasId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlayersId")
                        .HasColumnType("bigint");

                    b.HasKey("ArenasId", "PlayersId");

                    b.HasIndex("PlayersId");

                    b.ToTable("ArenaPlayer");
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Arena", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Arenas", (string)null);
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Gladiator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("ArenaId")
                        .HasColumnType("int");

                    b.Property<long?>("ArenaId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnFightRoster")
                        .HasColumnType("bit");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<long?>("PlayerId1")
                        .HasColumnType("bigint");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.Property<long?>("SchoolId1")
                        .HasColumnType("bigint");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArenaId1");

                    b.HasIndex("PlayerId1");

                    b.HasIndex("SchoolId1");

                    b.ToTable("Gladiator", (string)null);
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("Gladiator.Core.Entities.School", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("ArenaId")
                        .HasColumnType("int");

                    b.Property<long?>("ArenaId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<long>("PlayerId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArenaId1");

                    b.HasIndex("PlayerId1");

                    b.ToTable("Schools", (string)null);
                });

            modelBuilder.Entity("ArenaPlayer", b =>
                {
                    b.HasOne("Gladiator.Core.Entities.Arena", null)
                        .WithMany()
                        .HasForeignKey("ArenasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gladiator.Core.Entities.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Gladiator", b =>
                {
                    b.HasOne("Gladiator.Core.Entities.Arena", "Arena")
                        .WithMany("Gladiators")
                        .HasForeignKey("ArenaId1");

                    b.HasOne("Gladiator.Core.Entities.Player", "Player")
                        .WithMany("Gladiators")
                        .HasForeignKey("PlayerId1");

                    b.HasOne("Gladiator.Core.Entities.School", "School")
                        .WithMany("Gladiators")
                        .HasForeignKey("SchoolId1");

                    b.Navigation("Arena");

                    b.Navigation("Player");

                    b.Navigation("School");
                });

            modelBuilder.Entity("Gladiator.Core.Entities.School", b =>
                {
                    b.HasOne("Gladiator.Core.Entities.Arena", "Arena")
                        .WithMany("Schools")
                        .HasForeignKey("ArenaId1");

                    b.HasOne("Gladiator.Core.Entities.Player", "Player")
                        .WithMany("Schools")
                        .HasForeignKey("PlayerId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arena");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Arena", b =>
                {
                    b.Navigation("Gladiators");

                    b.Navigation("Schools");
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Player", b =>
                {
                    b.Navigation("Gladiators");

                    b.Navigation("Schools");
                });

            modelBuilder.Entity("Gladiator.Core.Entities.School", b =>
                {
                    b.Navigation("Gladiators");
                });
#pragma warning restore 612, 618
        }
    }
}
