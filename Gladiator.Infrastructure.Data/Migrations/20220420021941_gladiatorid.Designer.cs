// <auto-generated />
using System;
using Gladiator.Infrastructure.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gladiator.Infrastructure.Data.Migrations
{
    [DbContext(typeof(GladiatorContext))]
    [Migration("20220420021941_gladiatorid")]
    partial class gladiatorid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ArenaPlayer", b =>
                {
                    b.Property<int>("ArenasId")
                        .HasColumnType("int");

                    b.Property<int>("OwnersId")
                        .HasColumnType("int");

                    b.HasKey("ArenasId", "OwnersId");

                    b.HasIndex("OwnersId");

                    b.ToTable("ArenaPlayer");
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Arena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Arena");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1304),
                            Name = "Arena 1",
                            UpdatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1304)
                        });
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Gear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Durability")
                        .HasColumnType("int");

                    b.Property<int>("GladiatorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Slots")
                        .HasColumnType("int");

                    b.Property<int>("StatModifiersPercentId")
                        .HasColumnType("int");

                    b.Property<int>("StatModifiersPointsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GladiatorId");

                    b.HasIndex("StatModifiersPercentId")
                        .IsUnique();

                    b.HasIndex("StatModifiersPointsId")
                        .IsUnique();

                    b.ToTable("Gear");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Armor = 1,
                            CreatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1360),
                            Damage = 1,
                            Durability = 1,
                            GladiatorId = 1,
                            Name = "Gear 1",
                            Slots = 1,
                            StatModifiersPercentId = 3,
                            StatModifiersPointsId = 4,
                            UpdatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1361),
                            Weight = 1
                        });
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Gladiator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArenaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int>("StatUpdatesId")
                        .HasColumnType("int");

                    b.Property<int>("StatsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArenaId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("StatUpdatesId")
                        .IsUnique();

                    b.HasIndex("StatsId")
                        .IsUnique();

                    b.ToTable("Gladiator");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArenaId = 1,
                            CreatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1272),
                            Experience = 0,
                            Health = 1,
                            Name = "Gladiator 1",
                            PlayerId = 1,
                            SchoolId = 1,
                            StatUpdatesId = 2,
                            StatsId = 1,
                            UpdatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1273)
                        });
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Player");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(863),
                            Name = "Player 1",
                            UpdatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(868)
                        });
                });

            modelBuilder.Entity("Gladiator.Core.Entities.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArenaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArenaId");

                    b.HasIndex("PlayerId");

                    b.ToTable("School");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArenaId = 1,
                            CreatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1333),
                            Name = "Arena 1",
                            PlayerId = 1,
                            UpdatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1333)
                        });
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Stats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Stats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Agility = 1,
                            Constitution = 1,
                            CreatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1384),
                            Dexterity = 1,
                            Intelligence = 1,
                            Strength = 1,
                            UpdatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1385)
                        },
                        new
                        {
                            Id = 2,
                            Agility = 2,
                            Constitution = 2,
                            CreatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1446),
                            Dexterity = 2,
                            Intelligence = 2,
                            Strength = 2,
                            UpdatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1446)
                        },
                        new
                        {
                            Id = 3,
                            Agility = 3,
                            Constitution = 3,
                            CreatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1448),
                            Dexterity = 3,
                            Intelligence = 3,
                            Strength = 3,
                            UpdatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1448)
                        },
                        new
                        {
                            Id = 4,
                            Agility = 4,
                            Constitution = 4,
                            CreatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1450),
                            Dexterity = 4,
                            Intelligence = 4,
                            Strength = 4,
                            UpdatedAt = new DateTime(2022, 4, 20, 2, 19, 41, 50, DateTimeKind.Utc).AddTicks(1450)
                        });
                });

            modelBuilder.Entity("ArenaPlayer", b =>
                {
                    b.HasOne("Gladiator.Core.Entities.Arena", null)
                        .WithMany()
                        .HasForeignKey("ArenasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gladiator.Core.Entities.Player", null)
                        .WithMany()
                        .HasForeignKey("OwnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Gear", b =>
                {
                    b.HasOne("Gladiator.Core.Entities.Gladiator", "Gladiator")
                        .WithMany("Gear")
                        .HasForeignKey("GladiatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gladiator.Core.Entities.Stats", "StatModifiersPercent")
                        .WithOne("StatModifiersPercent")
                        .HasForeignKey("Gladiator.Core.Entities.Gear", "StatModifiersPercentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Gladiator.Core.Entities.Stats", "StatModifiersPoints")
                        .WithOne("StatModifiersPoints")
                        .HasForeignKey("Gladiator.Core.Entities.Gear", "StatModifiersPointsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Gladiator");

                    b.Navigation("StatModifiersPercent");

                    b.Navigation("StatModifiersPoints");
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Gladiator", b =>
                {
                    b.HasOne("Gladiator.Core.Entities.Arena", "Arena")
                        .WithMany("Gladiators")
                        .HasForeignKey("ArenaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gladiator.Core.Entities.Player", "Player")
                        .WithMany("Gladiators")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gladiator.Core.Entities.School", "School")
                        .WithMany("Gladiators")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gladiator.Core.Entities.Stats", "StatUpdates")
                        .WithOne("StatUpdates")
                        .HasForeignKey("Gladiator.Core.Entities.Gladiator", "StatUpdatesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Gladiator.Core.Entities.Stats", "Stats")
                        .WithOne("StatGladiator")
                        .HasForeignKey("Gladiator.Core.Entities.Gladiator", "StatsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Arena");

                    b.Navigation("Player");

                    b.Navigation("School");

                    b.Navigation("StatUpdates");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("Gladiator.Core.Entities.School", b =>
                {
                    b.HasOne("Gladiator.Core.Entities.Arena", "Arena")
                        .WithMany("Schools")
                        .HasForeignKey("ArenaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gladiator.Core.Entities.Player", "Player")
                        .WithMany("Schools")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arena");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Arena", b =>
                {
                    b.Navigation("Gladiators");

                    b.Navigation("Schools");
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Gladiator", b =>
                {
                    b.Navigation("Gear");
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Player", b =>
                {
                    b.Navigation("Gladiators");

                    b.Navigation("Schools");
                });

            modelBuilder.Entity("Gladiator.Core.Entities.School", b =>
                {
                    b.Navigation("Gladiators");
                });

            modelBuilder.Entity("Gladiator.Core.Entities.Stats", b =>
                {
                    b.Navigation("StatGladiator");

                    b.Navigation("StatModifiersPercent");

                    b.Navigation("StatModifiersPoints");

                    b.Navigation("StatUpdates");
                });
#pragma warning restore 612, 618
        }
    }
}
